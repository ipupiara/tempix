/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

// TODO  move comport to tempixTerminal since it is used also for other than comms Tests !
package tempixTerminalPackage;

import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;


/**
 *
 * @author Brigitte
 */
public class CommDialog extends javax.swing.JDialog {

    private static TempixTerminal ownerFrame;    
    private int pingNum;
    private static CommDialog dialog;
    private Timer pingTimer = null;
    private TimerTask task = null;
    Timer aTimer = null;
    
    /**
     * Creates new form CommDialog
     */
    
    public CommDialog(java.awt.Frame aFrame, boolean modal) {
        super(aFrame, modal);
        pingNum = 1;
        initComponents();
        pingText.setText("the quick brown fox jumped over the lazy dog.");
//        pingText.setText("the quick brown fox jumped over th");
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uartPingButton = new javax.swing.JButton();
        pingText = new javax.swing.JTextField();
        listPortsButton = new javax.swing.JButton();
        closePortButton = new javax.swing.JButton();
        cntTextField = new javax.swing.JTextField();
        startPingButton = new javax.swing.JButton();
        stopPingButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        uartPingButton.setText("Uart Ping");
        uartPingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uartPingButtonActionPerformed(evt);
            }
        });

        pingText.setText("the quick brown fox jumped over the lazy dog.");
        pingText.setToolTipText("");

        listPortsButton.setText("list Ports");
        listPortsButton.setToolTipText("");
        listPortsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listPortsButtonActionPerformed(evt);
            }
        });

        closePortButton.setText("close port");
        closePortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closePortButtonActionPerformed(evt);
            }
        });

        cntTextField.setEditable(false);
        cntTextField.setText("cntTextField");
        cntTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cntTextFieldActionPerformed(evt);
            }
        });

        startPingButton.setText("start ping");
        startPingButton.setActionCommand("startPingPressed");
        startPingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPingButtonActionPerformed(evt);
            }
        });

        stopPingButton.setText("stop Ping");
        stopPingButton.setActionCommand("stopPing");
        stopPingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopPingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uartPingButton)
                        .addGap(18, 18, 18)
                        .addComponent(pingText, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(listPortsButton)
                                .addGap(18, 18, 18)
                                .addComponent(closePortButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cntTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(157, 157, 157)
                                .addComponent(startPingButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(stopPingButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uartPingButton)
                    .addComponent(pingText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listPortsButton)
                    .addComponent(closePortButton))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cntTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startPingButton)
                    .addComponent(stopPingButton))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uartPingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uartPingButtonActionPerformed
        // TODO add your handling code here:
        ownerFrame.addToLog("ping pressed: "+pingText.getText()+" "+pingNum+"\n");
        JSerialCommsController.sendString("@ping:"+pingText.getText());
        pingNum= pingNum + 1; 
    }//GEN-LAST:event_uartPingButtonActionPerformed

    private void listPortsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listPortsButtonActionPerformed
        // TODO add your handling code here:
        ownerFrame.listPortsNOpenFirstNOnly();
    }//GEN-LAST:event_listPortsButtonActionPerformed

    private void closePortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closePortButtonActionPerformed
        // TODO add your handling code here:
        stopPing();
        String res = JSerialCommsController.closePort();
        ownerFrame.addToLog("close port returned: "+res+"\n");
    }//GEN-LAST:event_closePortButtonActionPerformed

    private void cntTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cntTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cntTextFieldActionPerformed

    private void startPingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPingButtonActionPerformed
        //  startButton
        if (aTimer == null ) {
            aTimer = new Timer();
            task = new TimerTask() {
                  public void run() {
                       ++ pingNum;
                        String txt = String.format("%7d", pingNum);
                      JSerialCommsController.sendString("@ping:"+txt);
                        pingNum= pingNum + 1; 
                        cntTextField.setText(txt);
 //                        System.out.println("Task performed on: " + new Date() + "n" +
 //             "Thread's name: " + Thread.currentThread().getName()+" "+txt);
                        
  //                      cntTextField.setText(txt);
                  }
              };
            aTimer.scheduleAtFixedRate(task, 100, 40);
        };
    }//GEN-LAST:event_startPingButtonActionPerformed

    private void stopPing()  {
        if (aTimer != null) {
            aTimer.cancel();
            aTimer = null;
        }
    }
    
    private void stopPingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopPingButtonActionPerformed
        // stop Button Presssed
        stopPing();
    }//GEN-LAST:event_stopPingButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CommDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CommDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CommDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CommDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CommDialog dialog = new CommDialog(new javax.swing.JFrame(), true,ownerFrame);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closePortButton;
    private javax.swing.JTextField cntTextField;
    private javax.swing.JButton listPortsButton;
    private javax.swing.JTextField pingText;
    private javax.swing.JButton startPingButton;
    private javax.swing.JButton stopPingButton;
    private javax.swing.JButton uartPingButton;
    // End of variables declaration//GEN-END:variables


    public static void createAndShowGUI(TempixTerminal ownr) 
    {
        if (dialog == null)  {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
//                    dialog = new CommDialog(new javax.swing.JFrame(), false);
                    dialog = new CommDialog(ownr,false);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
    //                        System.exit(0);
                            dialog = null;
                            ownerFrame = null;  
                        }
                    });
                    dialog.setVisible(true);
                }
            });
            ownerFrame = ownr;
        } else {
            dialog.toFront();
            dialog.requestFocus();
        }
    }
        
    


}
